409.6-64
724-684
20021660-20022072
20000*20000
20*20
A <- matrix(c(-1,1,2,3,-1,1,-1,3,4), nrow=3, ncol=3)
A
solve(A)
100-4.43
100-9.80
100-3.58
z <- c(1,2,3)
y <- c(3,4,5)
x <- c(4,5,6,7)
union(z,y,x)
union(z,y)
?sample
231-93
138/6
93+138
source('D:/Users/S.Yoon/Google 드라이브/2019_07 BRCA_analysis_v08/BRCA_v15b_perf_191019a.R')
source('D:/Users/S.Yoon/Google 드라이브/2019_07 BRCA_analysis_v08/BRCA_v15b_perf_191019a.R')
?arrange_ggsurvplots
suppressPackageStartupMessages(library(rje))
suppressPackageStartupMessages(library(Rfast))
suppressPackageStartupMessages(library(gplots))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(tsne))
suppressPackageStartupMessages(library(umap))
suppressPackageStartupMessages(library(caret))
suppressPackageStartupMessages(library(survival))
suppressPackageStartupMessages(library(survminer))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(diceR))
suppressPackageStartupMessages(library(gdata))
suppressPackageStartupMessages(library(limma))
suppressPackageStartupMessages(library("xgboost"))  # the main algorithm
suppressPackageStartupMessages(library("archdata")) # for the sample dataset
suppressPackageStartupMessages(library("caret"))    # for the confusionmatrix() function (also needs e1071 package)
suppressPackageStartupMessages(library("dplyr"))    # for some data preperation
suppressPackageStartupMessages(library("Ckmeans.1d.dp")) # for xgb.ggplot.importance
# suppressPackageStartupMessages(library(BootValidation))
library(e1071)
source("lib_gene_select_v12.R")
source("lib_classification_v08.R")
source("lib_load_data_v07.R")
source("lib_misc_v21.R")
source("lib_hm3.R")
source("lib_gmm_v03.R")
source("lib_clust_v01.R")
source("lib_tcga_brca_v04.R")
?arrange_ggsurvplots
# Fit survival curves
require("survival")
fit<- survfit(Surv(time, status) ~ sex, data = lung)
# List of ggsurvplots
require("survminer")
splots <- list()
splots[[1]] <- ggsurvplot(fit, data = lung, risk.table = TRUE, ggtheme = theme_minimal())
splots[[2]] <- ggsurvplot(fit, data = lung, risk.table = TRUE, ggtheme = theme_grey())
# Arrange multiple ggsurvplots and print the output
arrange_ggsurvplots(splots, print = TRUE,
ncol = 2, nrow = 1, risk.table.height = 0.4)
## Not run:
# Arrange and save into pdf file
res <- arrange_ggsurvplots(splots, print = FALSE)
ggsave("myfile.pdf", res)
?sample
sample(c(0,1), 5, replace=TRUE)
355/12
3e9
(3e9/100)/20000
setwd("D:/Users/S.Yoon/Google 드라이브/2019_07 BRCA_analysis_v12")
setwd("~/")
3.73+4.4+0.53
3.73+4.4
(21600+11610)
3e8
3e8/1e6
50*log10(30)
106.5-73
50*log10(20)
106.5 - 50*log10(20)
81.5 - 50*log10(20)
81.5 - 50*log10(10)
742/1659
379/737
476/786
813/1351
742/1659
742/1596
742/1575
742/1519
735/1441
812/1278
813/1351
812/1278
740/1457
811/1254
737/1375
c(737,734, 710,678,593)/c(1376, 1336, 1191, 1076, 830)
c(737,734, 681,629,542)/c(1376, 1336, 1055, 900, 702)
c(742,734, 681,629,542)/c(1576, 1337, 1055, 900, 702)
810/1245
813/1351
810/1085
810/1085
810/1245
813/1310
801/1251
2945+75+103+110+54+90+65+66+95+96+91+56+63+80+106+81+113+43+39+222+32+1+4626
9252-4594
4626-4594
49980/7
62258/7
24*7+1
78+91
16000*0.0287
16000*0.0287/12
40000000/1200
4000*15/115
5220000/1200
800*12*0.2
19200000/1200
15000000/1200
10000000/1200
30000*0.15
10000+14000+8700
33333-32700
14000*1200
15000*1200
15000*1200/12
4000/1200
108/180
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
install.packages('curl')
install.packages("curl")
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
install.packages('lazy')
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
install.packages('backports')
install.packages("backports")
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
library(lazy)
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
install.packages('backports')
install.packages("backports")
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
install.packages('Matrix')
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
source("http://www.bioconductor.org/biocLite.R")
biocLite("GEOquery")
library(Biobase)
library(GEOquery)
gds858 <- getGEO("GDS858", destdir = "../data/")
gds858 <- getGEO("GSE133394", destdir = "../data/")
install.packages('installr')
library(installr)
updateR()
install.packages("Seurat")
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c('DelayedArray', 'DelayedMatrixStats', 'org.Hs.eg.db', 'org.Mm.eg.db'))
install.packages("devtools")
devtools::install_github("cole-trapnell-lab/garnett")
library(garnett)
install.packages("devtools")
devtools::install_github("cole-trapnell-lab/garnett")
install.packages("devtools")
library(devtools)
install.packages("devtools")
devtools::install_github("cole-trapnell-lab/garnett")
install.packages("devtools")
devtools::install_github("cole-trapnell-lab/garnett")
BiocManager::install(c('DelayedArray', 'DelayedMatrixStats', 'org.Hs.eg.db', 'org.Mm.eg.db'))
devtools::install_github("cole-trapnell-lab/garnett")
library(org.Mm.eg.db)
library(org.Hs.eg.db)
library(DelayedArray)
library(DelayedMatrixStats)
devtools::install_github("cole-trapnell-lab/garnett")
library(garnett)
install.packages('garnett')
library(monocle)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("monocle")
library(monocle)
BiocManager::install(c('DelayedArray', 'DelayedMatrixStats', 'org.Hs.eg.db', 'org.Mm.eg.db'))
devtools::install_github("cole-trapnell-lab/garnett")
library(garnett)
devtools::install_github("cole-trapnell-lab/garnett")
install.packages('stringr')
library(stringr)
library(anndata)
devtools::install_github("Irrationone/cellassign")
devtools::install_github("Irrationone/cellassign")
devtools::install_github("Irrationone/cellassign")
install.packages("tensorflow")
tensorflow::install_tensorflow()
devtools::install_github("Irrationone/cellassign")
devtools::install_github("Irrationone/cellassign")
reticulate::install_miniconda()
devtools::install_github("Irrationone/cellassign")
devtools::install_github("kieranrcampbell/cellassign")
library(cellassign)
devtools::install_github("LTLA/basilisk")
devtools::install_github("LTLA/basilisk")
reticulate::py_config()
tensorflow::tf_config()
tensorflow::use_condaenv('r-reticulate')
devtools::install_github("LTLA/basilisk")
devtools::install_github("kieranrcampbell/cellassign")
? data.frame
? as.vector
? as.string
?? as.string
as.character()
? read_h5ad
library(anndata)
? read_h5ad
devtools::install_github("immunogenomics/harmony")
devtools::install_github("immunogenomics/harmony")
pkgbuild::check_build_tools(debug = TRUE)
install.packages("ggalluvial")
remotes::install_github("corybrunson/ggalluvial", ref = "optimization")
install.packages('alluvial')
library(devtools)
library(roxygen2)
install.packages("roxygen2")
install.packages("roxygen2")
install.packages("roxygen2")
install.packages("roxygen2")
setwd('D:\Users\S.Yoon\GitHub\CTIcollection')
setwd('D:/Users/S.Yoon/GitHub/CTIcollection')
devtools::create("CTIcollection")
